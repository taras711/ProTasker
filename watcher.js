const fs = require('fs');
const path = require('path');
const chokidar = require('chokidar');
const jsdiff = require('diff'); // npm install diff

const historyFile = 'veredit.json';
const fileStates = {}; // –•—Ä–∞–Ω–∏–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ñ–∞–π–ª–æ–≤

// –ß–∏—Ç–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç –ø–µ—Ä–µ–¥ –∏–∑–º–µ–Ω–µ–Ω–∏–µ–º
function readPreviousContent(filePath) {
    if (fs.existsSync(filePath)) {
        return fs.readFileSync(filePath, 'utf8');
    }
    return '';
}

// –§–∏–∫—Å–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ –≤ JSON —Å diff
function logChange(filePath) {
    if (!fs.existsSync(historyFile)) {
        console.log('‚ö†Ô∏è –ò—Å—Ç–æ—Ä–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, —Å–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–π —Ñ–∞–π–ª.');
        fs.writeFileSync(historyFile, JSON.stringify({ changes: [] }, null, 2), 'utf8');
    }

    const history = JSON.parse(fs.readFileSync(historyFile, 'utf8'));

    const newContent = fs.readFileSync(filePath, 'utf8');
    const oldContent = fileStates[filePath] || readPreviousContent(filePath);
    fileStates[filePath] = newContent; // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ

    const changes = jsdiff.diffLines(oldContent, newContent); // –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Å—Ç—Ä–æ–∫–∏
    const diffResult = changes.map((part, index) => ({
        type: part.added ? 'added' : part.removed ? 'removed' : 'unchanged',
        line: index + 1,
        content: part.value.trim(),
    })).filter(change => change.type !== 'unchanged'); // –£–±–∏—Ä–∞–µ–º –Ω–µ–∏–∑–º–µ–Ω—ë–Ω–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏

    if (diffResult.length === 0) return; // –ï—Å–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π –Ω–µ—Ç, –Ω–µ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º

    console.log(`üìù –§–∏–∫—Å–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ –≤ —Ñ–∞–π–ª–µ: ${filePath}`);
    console.log(`üì• –ò–∑–º–µ–Ω—ë–Ω–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏:`, diffResult);

    history.changes.push({
        path: filePath,
        timestamp: new Date().toISOString(),
        modifications: diffResult
    });

    fs.writeFileSync(historyFile, JSON.stringify(history, null, 2), 'utf8');
}

// –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Å–ª–µ–∂–µ–Ω–∏–µ –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏
const watcher = chokidar.watch('src/**/*.js', { persistent: true });

watcher
    .on('change', logChange)
    .on('add', (filePath) => {
        console.log(`üìÇ –ù–æ–≤—ã–π —Ñ–∞–π–ª: ${filePath}`);
        fileStates[filePath] = readPreviousContent(filePath); // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    });

console.log('üöÄ –°–ª–µ–¥–∏–º –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏...');
